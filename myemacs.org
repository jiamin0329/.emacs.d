* My Emacs

** Basic Requirement 
   - [-]General[0%] 
     - [ ]theme
       - [X]gui mode
       - [ ]terminal mode
     - [X]modeline 
   - [-]C/C++ support[0%]
     - [X]auto-complete
     - [X]goto header file
     - [X]goto definition
     - [X]goto declaration
     - [X]clang-format support
     - [ ]cmake support
   - [ ]Python support
   - [ ]gdb support
   - [ ]git support - magit
   - [ ]project management
   - [ ]latex support
   - [ ]org mode
     - [ ]indent
     - [ ]preview
     - [X]plantuml
     - [ ]fancy highlight of code blocks

*** General
**** theme 
     GUI mode - using doom-themes
     Terminal mode - not decided, font/color/background should be repicked
**** mode line
     Powerline package is used, see lisp/init-general.el.
**** ace-window
     ace-window is used to switch from window to window.
**** swiper
     use swiper to do the searching

**** helm
**** keyfreq     
     Keyfreq is used to analyze key using statistics in emacs. 
     Include the following lines in your .emacs file:
#+BEGIN_SRC 
(require 'keyfreq)
(keyfreq-mode 1)
(keyfreq-autosave-mode 1)

;;How to exclude commands?
(setq keyfreq-excluded-commands
      '(self-insert-command
        forward-char
        backward-char
        previous-line
        next-line))
#+END_SRC
     
*** C/C++ support
***** clangd

***** Semantic(retired)
      Now Semantic can search system include path and current path, but it still cannot access all includes in local project. So sometimes auto-complete cannot work. 
      Project includes are added into cedet-user-include-dirs to make sure semantics can access all the project includes. 
     
***** helm-gtags(retired)
      gtags works well. I can enjoy code navigation.

*** Projectile
    Here projectile is integrated in helm. 

    Keybindings:(with C-c p prefix)
    C-c p f - helm-projectile-find-file-dwin
    
*** magit

*** lsp mode - Language Server Protocal Support for Emacs
lsp mode = lsp client in editor + language server



**** Installation

***** lsp mode
For vanilla Emacs - go minimal and use lsp-mode without external packages


packages:
eglot
emacs-ccls



#+BEGIN_SRC lisp
;; set prefix for lsp-command-keymap (few alternatives - "C-l", "C-c l")
(setq lsp-keymap-prefix "s-l")

(use-package lsp-mode
    :hook (;; replace XXX-mode with concrete major-mode(e. g. python-mode)
           (XXX-mode . lsp)
           ;; if you want which-key integration
           (lsp-mode . lsp-enable-which-key-integration))
    :commands lsp)

;; optionally
(use-package lsp-ui 
    :commands lsp-ui-mode)
;; if you are helm user
(use-package helm-lsp 
    :commands helm-lsp-workspace-symbol)
;; if you are ivy user
(use-package lsp-ivy 
    :commands lsp-ivy-workspace-symbol)
(use-package lsp-treemacs 
    :commands lsp-treemacs-errors-list)

;; optionally if you want to use debugger
(use-package dap-mode)
;; (use-package dap-LANGUAGE) to load the dap adapter for your language

;; optional if you want which-key integration
(use-package which-key
    :config
    (which-key-mode))

#+END_SRC

***** Dap mode






** Key Bindings

   | key | function                        |
   |-----+---------------------------------|
   | F1  | open init.el in .emacs.d folder |
   | F2  | open vterm in other window      |
   | F3  |                                 |
   | F4  |                                 |
   | F5  |                                 |
   | F6  |                                 |
   | F7  |                                 |
   | F8  |                                 |
   | F9  |                                 |
   | F10 |                                 |
   | F11 |                                 |
   | F12 | load init.el                    |
   |-----+---------------------------------|


** General key bindings for editing
   | key     | function                       |
   |---------+--------------------------------|
   | C-x C-f | open or new a file             |
   | C-x C-s | save                           |
   | C-x C-w | save as                        |
   |---------+--------------------------------|
   | C-x h   | select all text                |
   | C-a     | move to the begining of a line |
   | C-e     | move to the end of a line      |
   | C-k     | kill a line                    |
   |         |                                |
   |---------+--------------------------------|

** Code navigation
    | key   | function   |
    |-------+------------|
    | M-g g | go to line |
    |       |            |
    |       |            |
    |       |            |





